#ifndef CLOCK_H
#define CLOCK_H

#include "includes.h"
#include "io.h"


typedef enum
{
	CLOCK_GCLOCK_ID_0 = GCLK_CLKCTRL_GEN_GCLK0,
	CLOCK_GCLOCK_ID_1 = GCLK_CLKCTRL_GEN_GCLK1,
	CLOCK_GCLOCK_ID_2 = GCLK_CLKCTRL_GEN_GCLK2,
	CLOCK_GCLOCK_ID_3 = GCLK_CLKCTRL_GEN_GCLK3,
	CLOCK_GCLOCK_ID_4 = GCLK_CLKCTRL_GEN_GCLK4,
	CLOCK_GCLOCK_ID_5 = GCLK_CLKCTRL_GEN_GCLK5,
	CLOCK_GCLOCK_ID_6 = GCLK_CLKCTRL_GEN_GCLK6,
	CLOCK_GCLOCK_ID_7 = GCLK_CLKCTRL_GEN_GCLK7,
	CLOCK_GCLOCK_ID_8 = GCLK_CLKCTRL_GEN_GCLK8,
	//
	CLOCK_GCLOCK_ID_NUM_GCLOCKS
} CLOCK_gclock_id;

typedef enum
{
	CLOCK_SOURCE_XOSC 		= GCLK_GENCTRL_SRC_XOSC,
	CLOCK_SOURCE_GCLKIN 	= GCLK_GENCTRL_SRC_GCLKIN,
	CLOCK_SOURCE_GCLKGEN1 	= GCLK_GENCTRL_SRC_GCLKGEN1,
	CLOCK_SOURCE_OSCULP32K 	= GCLK_GENCTRL_SRC_OSCULP32K,
	CLOCK_SOURCE_OSC32K 	= GCLK_GENCTRL_SRC_OSC32K,
	CLOCK_SOURCE_XOSC32K 	= GCLK_GENCTRL_SRC_XOSC32K,
	CLOCK_SOURCE_OSC8M 		= GCLK_GENCTRL_SRC_OSC8M,
	CLOCK_SOURCE_DFLL48M 	= GCLK_GENCTRL_SRC_DFLL48M,
	CLOCK_SOURCE_DPLL96M 	= GCLK_GENCTRL_SRC_DPLL96M,
	//
	CLOCK_SOURCE_NUM_SOURCES
} CLOCK_source_t;

void CLOCK_osc8m_init					(void);
void CLOCK_gclock_init					(const CLOCK_gclock_id gclock, const CLOCK_source_t source);
void CLOCK_main_clock_output_enable		(const IO_pin_designation_t pin);
void CLOCK_main_clock_output_disable	(const IO_pin_designation_t pin);


#endif